# include <cstdio># include <algorithm># include <queue>using namespace std;const int N = 5e3,M = 2e5,inf = 2147483647;inline int re(){    int x=0,f=1;char c=getchar();    while(c>'9'||c<'0') {if(c=='-') f=-1;c=getchar();}    while(c>='0'&&c<='9') {x=x*10+c-'0'; c=getchar();}    return x*f;}struct edge{	int from,to;	int wi;	bool operator < (const edge a) const	{		return wi < a.wi;	}} e[M+42];int head[N+42];int n,m,s = 0,a[N+42];int dis[N+42];long long sum = 0;int cut(int i){	return a[i] == i ? a[i] : a[i] = cut(a[i]);}void cha(int x,int y){	if(cut(x) != cut(y)) 		a[a[y]] = a[a[x]];}int main(){	n = re();	m = re();	for(register int i = 1;i <= m; i++){		e[i].from = re();		e[i].to = re();		e[i].wi = re();		sum += e[i].wi;	}	sort(e+1,e+m+1);	for(register int i = 1;i <= n; i++) a[i] = i;	for(register int i = 1;i <= m; i++){		if(cut(a[e[i].to]) != cut(a[e[i].from])){			cha(a[e[i].to],a[e[i].from]);			s += e[i].wi;		}	}	bool flag = false;	for(register int i = 2;i <= n; i++) 		if(cut(a[i]) != cut(a[1])){			flag = true;			break;		}		printf("%lld",sum - s);	return 0;}